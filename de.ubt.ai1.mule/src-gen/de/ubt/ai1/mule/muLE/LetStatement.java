/**
 * generated by Xtext 2.19.0
 */
package de.ubt.ai1.mule.muLE;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Let Statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.ubt.ai1.mule.muLE.LetStatement#getVariable <em>Variable</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.LetStatement#getExpression <em>Expression</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.LetStatement#getBlock <em>Block</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.LetStatement#getElseLets <em>Else Lets</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.LetStatement#getElseBlock <em>Else Block</em>}</li>
 * </ul>
 *
 * @see de.ubt.ai1.mule.muLE.MuLEPackage#getLetStatement()
 * @model
 * @generated
 */
public interface LetStatement extends Statement
{
  /**
   * Returns the value of the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable</em>' containment reference.
   * @see #setVariable(VariableDeclaration)
   * @see de.ubt.ai1.mule.muLE.MuLEPackage#getLetStatement_Variable()
   * @model containment="true"
   * @generated
   */
  VariableDeclaration getVariable();

  /**
   * Sets the value of the '{@link de.ubt.ai1.mule.muLE.LetStatement#getVariable <em>Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable</em>' containment reference.
   * @see #getVariable()
   * @generated
   */
  void setVariable(VariableDeclaration value);

  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(Expression)
   * @see de.ubt.ai1.mule.muLE.MuLEPackage#getLetStatement_Expression()
   * @model containment="true"
   * @generated
   */
  Expression getExpression();

  /**
   * Sets the value of the '{@link de.ubt.ai1.mule.muLE.LetStatement#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(Expression value);

  /**
   * Returns the value of the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Block</em>' containment reference.
   * @see #setBlock(Block)
   * @see de.ubt.ai1.mule.muLE.MuLEPackage#getLetStatement_Block()
   * @model containment="true"
   * @generated
   */
  Block getBlock();

  /**
   * Sets the value of the '{@link de.ubt.ai1.mule.muLE.LetStatement#getBlock <em>Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Block</em>' containment reference.
   * @see #getBlock()
   * @generated
   */
  void setBlock(Block value);

  /**
   * Returns the value of the '<em><b>Else Lets</b></em>' containment reference list.
   * The list contents are of type {@link de.ubt.ai1.mule.muLE.ElseLet}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Lets</em>' containment reference list.
   * @see de.ubt.ai1.mule.muLE.MuLEPackage#getLetStatement_ElseLets()
   * @model containment="true"
   * @generated
   */
  EList<ElseLet> getElseLets();

  /**
   * Returns the value of the '<em><b>Else Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Block</em>' containment reference.
   * @see #setElseBlock(Block)
   * @see de.ubt.ai1.mule.muLE.MuLEPackage#getLetStatement_ElseBlock()
   * @model containment="true"
   * @generated
   */
  Block getElseBlock();

  /**
   * Sets the value of the '{@link de.ubt.ai1.mule.muLE.LetStatement#getElseBlock <em>Else Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Else Block</em>' containment reference.
   * @see #getElseBlock()
   * @generated
   */
  void setElseBlock(Block value);

} // LetStatement
