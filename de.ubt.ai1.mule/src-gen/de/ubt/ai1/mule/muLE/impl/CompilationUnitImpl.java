/**
 * generated by Xtext 2.19.0
 */
package de.ubt.ai1.mule.muLE.impl;

import de.ubt.ai1.mule.muLE.CompilationUnit;
import de.ubt.ai1.mule.muLE.Import;
import de.ubt.ai1.mule.muLE.MainProcedure;
import de.ubt.ai1.mule.muLE.MuLEPackage;
import de.ubt.ai1.mule.muLE.ProgramElement;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Compilation Unit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.ubt.ai1.mule.muLE.impl.CompilationUnitImpl#isIsProgram <em>Is Program</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.impl.CompilationUnitImpl#isIsLibrary <em>Is Library</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.impl.CompilationUnitImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.impl.CompilationUnitImpl#getProgramElements <em>Program Elements</em>}</li>
 *   <li>{@link de.ubt.ai1.mule.muLE.impl.CompilationUnitImpl#getMain <em>Main</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CompilationUnitImpl extends NamedElementImpl implements CompilationUnit
{
  /**
   * The default value of the '{@link #isIsProgram() <em>Is Program</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsProgram()
   * @generated
   * @ordered
   */
  protected static final boolean IS_PROGRAM_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsProgram() <em>Is Program</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsProgram()
   * @generated
   * @ordered
   */
  protected boolean isProgram = IS_PROGRAM_EDEFAULT;

  /**
   * The default value of the '{@link #isIsLibrary() <em>Is Library</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsLibrary()
   * @generated
   * @ordered
   */
  protected static final boolean IS_LIBRARY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsLibrary() <em>Is Library</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsLibrary()
   * @generated
   * @ordered
   */
  protected boolean isLibrary = IS_LIBRARY_EDEFAULT;

  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected EList<Import> imports;

  /**
   * The cached value of the '{@link #getProgramElements() <em>Program Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProgramElements()
   * @generated
   * @ordered
   */
  protected EList<ProgramElement> programElements;

  /**
   * The cached value of the '{@link #getMain() <em>Main</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMain()
   * @generated
   * @ordered
   */
  protected MainProcedure main;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CompilationUnitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MuLEPackage.Literals.COMPILATION_UNIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsProgram()
  {
    return isProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsProgram(boolean newIsProgram)
  {
    boolean oldIsProgram = isProgram;
    isProgram = newIsProgram;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MuLEPackage.COMPILATION_UNIT__IS_PROGRAM, oldIsProgram, isProgram));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsLibrary()
  {
    return isLibrary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsLibrary(boolean newIsLibrary)
  {
    boolean oldIsLibrary = isLibrary;
    isLibrary = newIsLibrary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MuLEPackage.COMPILATION_UNIT__IS_LIBRARY, oldIsLibrary, isLibrary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Import> getImports()
  {
    if (imports == null)
    {
      imports = new EObjectContainmentEList<Import>(Import.class, this, MuLEPackage.COMPILATION_UNIT__IMPORTS);
    }
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ProgramElement> getProgramElements()
  {
    if (programElements == null)
    {
      programElements = new EObjectContainmentEList<ProgramElement>(ProgramElement.class, this, MuLEPackage.COMPILATION_UNIT__PROGRAM_ELEMENTS);
    }
    return programElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MainProcedure getMain()
  {
    return main;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMain(MainProcedure newMain, NotificationChain msgs)
  {
    MainProcedure oldMain = main;
    main = newMain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MuLEPackage.COMPILATION_UNIT__MAIN, oldMain, newMain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMain(MainProcedure newMain)
  {
    if (newMain != main)
    {
      NotificationChain msgs = null;
      if (main != null)
        msgs = ((InternalEObject)main).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MuLEPackage.COMPILATION_UNIT__MAIN, null, msgs);
      if (newMain != null)
        msgs = ((InternalEObject)newMain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MuLEPackage.COMPILATION_UNIT__MAIN, null, msgs);
      msgs = basicSetMain(newMain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MuLEPackage.COMPILATION_UNIT__MAIN, newMain, newMain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MuLEPackage.COMPILATION_UNIT__IMPORTS:
        return ((InternalEList<?>)getImports()).basicRemove(otherEnd, msgs);
      case MuLEPackage.COMPILATION_UNIT__PROGRAM_ELEMENTS:
        return ((InternalEList<?>)getProgramElements()).basicRemove(otherEnd, msgs);
      case MuLEPackage.COMPILATION_UNIT__MAIN:
        return basicSetMain(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MuLEPackage.COMPILATION_UNIT__IS_PROGRAM:
        return isIsProgram();
      case MuLEPackage.COMPILATION_UNIT__IS_LIBRARY:
        return isIsLibrary();
      case MuLEPackage.COMPILATION_UNIT__IMPORTS:
        return getImports();
      case MuLEPackage.COMPILATION_UNIT__PROGRAM_ELEMENTS:
        return getProgramElements();
      case MuLEPackage.COMPILATION_UNIT__MAIN:
        return getMain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MuLEPackage.COMPILATION_UNIT__IS_PROGRAM:
        setIsProgram((Boolean)newValue);
        return;
      case MuLEPackage.COMPILATION_UNIT__IS_LIBRARY:
        setIsLibrary((Boolean)newValue);
        return;
      case MuLEPackage.COMPILATION_UNIT__IMPORTS:
        getImports().clear();
        getImports().addAll((Collection<? extends Import>)newValue);
        return;
      case MuLEPackage.COMPILATION_UNIT__PROGRAM_ELEMENTS:
        getProgramElements().clear();
        getProgramElements().addAll((Collection<? extends ProgramElement>)newValue);
        return;
      case MuLEPackage.COMPILATION_UNIT__MAIN:
        setMain((MainProcedure)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MuLEPackage.COMPILATION_UNIT__IS_PROGRAM:
        setIsProgram(IS_PROGRAM_EDEFAULT);
        return;
      case MuLEPackage.COMPILATION_UNIT__IS_LIBRARY:
        setIsLibrary(IS_LIBRARY_EDEFAULT);
        return;
      case MuLEPackage.COMPILATION_UNIT__IMPORTS:
        getImports().clear();
        return;
      case MuLEPackage.COMPILATION_UNIT__PROGRAM_ELEMENTS:
        getProgramElements().clear();
        return;
      case MuLEPackage.COMPILATION_UNIT__MAIN:
        setMain((MainProcedure)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MuLEPackage.COMPILATION_UNIT__IS_PROGRAM:
        return isProgram != IS_PROGRAM_EDEFAULT;
      case MuLEPackage.COMPILATION_UNIT__IS_LIBRARY:
        return isLibrary != IS_LIBRARY_EDEFAULT;
      case MuLEPackage.COMPILATION_UNIT__IMPORTS:
        return imports != null && !imports.isEmpty();
      case MuLEPackage.COMPILATION_UNIT__PROGRAM_ELEMENTS:
        return programElements != null && !programElements.isEmpty();
      case MuLEPackage.COMPILATION_UNIT__MAIN:
        return main != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (isProgram: ");
    result.append(isProgram);
    result.append(", isLibrary: ");
    result.append(isLibrary);
    result.append(')');
    return result.toString();
  }

} //CompilationUnitImpl
